{
  "openapi": "3.0.0",
  "info": {
    "title": "Dota Scout Assistant API",
    "version": "1.0.0",
    "description": "API documentation for Dota Scout Assistant service routes."
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "components": {
    "schemas": {
      "OpenDotaHero": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "localized_name": {
            "type": "string"
          },
          "primary_attr": {
            "type": "string"
          },
          "attack_type": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "img": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "base_health": {
            "type": "integer"
          },
          "base_mana": {
            "type": "integer"
          },
          "base_armor": {
            "type": "number"
          },
          "base_attack_min": {
            "type": "integer"
          },
          "base_attack_max": {
            "type": "integer"
          },
          "move_speed": {
            "type": "integer"
          },
          "base_attack_time": {
            "type": "number"
          },
          "attack_point": {
            "type": "number"
          },
          "attack_range": {
            "type": "integer"
          },
          "projectile_speed": {
            "type": "integer"
          },
          "turn_rate": {
            "type": "number"
          },
          "cm_enabled": {
            "type": "boolean"
          },
          "legs": {
            "type": "integer"
          },
          "day_vision": {
            "type": "integer"
          },
          "night_vision": {
            "type": "integer"
          },
          "hero_id": {
            "type": "integer"
          },
          "turbo_picks": {
            "type": "integer"
          },
          "turbo_wins": {
            "type": "integer"
          },
          "pro_ban": {
            "type": "integer"
          },
          "pro_win": {
            "type": "integer"
          },
          "pro_pick": {
            "type": "integer"
          },
          "1_pick": {
            "type": "integer"
          },
          "1_win": {
            "type": "integer"
          },
          "2_pick": {
            "type": "integer"
          },
          "2_win": {
            "type": "integer"
          },
          "3_pick": {
            "type": "integer"
          },
          "3_win": {
            "type": "integer"
          },
          "4_pick": {
            "type": "integer"
          },
          "4_win": {
            "type": "integer"
          },
          "5_pick": {
            "type": "integer"
          },
          "5_win": {
            "type": "integer"
          },
          "6_pick": {
            "type": "integer"
          },
          "6_win": {
            "type": "integer"
          },
          "7_pick": {
            "type": "integer"
          },
          "7_win": {
            "type": "integer"
          },
          "8_pick": {
            "type": "integer"
          },
          "8_win": {
            "type": "integer"
          },
          "null_pick": {
            "type": "integer"
          },
          "null_win": {
            "type": "integer"
          }
        }
      },
      "OpenDotaPlayer": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer"
          },
          "personaname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "avatarfull": {
            "type": "string"
          },
          "profileurl": {
            "type": "string"
          },
          "last_login": {
            "type": "string"
          },
          "loccountrycode": {
            "type": "string"
          },
          "is_contributor": {
            "type": "boolean"
          },
          "is_subscriber": {
            "type": "boolean"
          },
          "rank_tier": {
            "type": "integer"
          },
          "leaderboard_rank": {
            "type": "integer"
          },
          "solo_competitive_rank": {
            "type": "integer"
          },
          "competitive_rank": {
            "type": "integer"
          },
          "mmr_estimate": {
            "type": "object",
            "properties": {
              "estimate": {
                "type": "integer"
              },
              "stdDev": {
                "type": "number"
              },
              "n": {
                "type": "integer"
              }
            }
          }
        }
      },
      "PlayerStats": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "overallStats": {
            "type": "object",
            "properties": {
              "matches": {
                "type": "integer"
              },
              "winRate": {
                "type": "number"
              },
              "avgKDA": {
                "type": "number"
              },
              "avgGPM": {
                "type": "number"
              },
              "avgXPM": {
                "type": "number"
              },
              "avgGameLength": {
                "type": "string"
              }
            }
          },
          "recentPerformance": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "hero": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "KDA": {
                  "type": "string"
                },
                "GPM": {
                  "type": "number"
                }
              }
            }
          },
          "topHeroes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hero": {
                  "type": "string"
                },
                "games": {
                  "type": "integer"
                },
                "winRate": {
                  "type": "number"
                },
                "avgKDA": {
                  "type": "number"
                },
                "avgGPM": {
                  "type": "number"
                }
              }
            }
          },
          "trends": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metric": {
                  "type": "string"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "trend": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "up",
                    "down",
                    "neutral"
                  ]
                }
              }
            }
          },
          "rank": {
            "type": "string"
          },
          "stars": {
            "type": "integer"
          },
          "immortalRank": {
            "type": "integer"
          },
          "rankImage": {
            "type": "string"
          },
          "recentlyPlayed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hero": {
                  "type": "string"
                },
                "heroImage": {
                  "type": "string"
                },
                "games": {
                  "type": "integer"
                },
                "winRate": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "MatchHistory": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "object",
            "properties": {
              "totalMatches": {
                "type": "integer"
              },
              "wins": {
                "type": "integer"
              },
              "losses": {
                "type": "integer"
              },
              "winRate": {
                "type": "number"
              },
              "avgGameLength": {
                "type": "string"
              },
              "longestWinStreak": {
                "type": "integer"
              },
              "currentStreak": {
                "type": "integer"
              }
            }
          },
          "matches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                },
                "opponent": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "score": {
                  "type": "string"
                },
                "duration": {
                  "type": "string"
                },
                "league": {
                  "type": "string"
                },
                "map": {
                  "type": "string"
                },
                "picks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bans": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "opponentPicks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "opponentBans": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "draftOrder": {
                  "type": "array",
                  "items": {}
                },
                "highlights": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "playerStats": {
                  "type": "object",
                  "additionalProperties": true
                },
                "games": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "picks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "bans": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "opponentPicks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "opponentBans": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "draftOrder": {
                        "type": "array",
                        "items": {}
                      },
                      "highlights": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "playerStats": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "duration": {
                        "type": "string"
                      },
                      "score": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "trends": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metric": {
                  "type": "string"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "trend": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "up",
                    "down",
                    "neutral"
                  ]
                }
              }
            }
          }
        }
      },
      "DraftSuggestions": {
        "type": "object",
        "properties": {
          "teamStrengths": {
            "type": "object",
            "properties": {
              "carry": {
                "type": "string"
              },
              "mid": {
                "type": "string"
              },
              "support": {
                "type": "string"
              },
              "offlane": {
                "type": "string"
              }
            }
          },
          "teamWeaknesses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phaseRecommendations": {
            "type": "object",
            "properties": {
              "first": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "heroes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "synergy": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "counters": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "pickPriority": {
                          "type": "string"
                        },
                        "winRate": {
                          "type": "number"
                        },
                        "games": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "second": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "heroes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "synergy": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "counters": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "pickPriority": {
                          "type": "string"
                        },
                        "winRate": {
                          "type": "number"
                        },
                        "games": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "third": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "heroes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "synergy": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "counters": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "pickPriority": {
                          "type": "string"
                        },
                        "winRate": {
                          "type": "number"
                        },
                        "games": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "metaCounters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hero": {
                  "type": "string"
                },
                "counter": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "effectiveness": {
                  "type": "string"
                }
              }
            }
          },
          "recentDrafts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "opponent": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "picks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bans": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "notes": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TeamAnalysis": {
        "type": "object",
        "properties": {
          "overallStats": {
            "type": "object",
            "properties": {
              "totalMatches": {
                "type": "integer"
              },
              "winRate": {
                "type": "number"
              },
              "avgGameLength": {
                "type": "string"
              },
              "avgKDA": {
                "type": "number"
              },
              "avgGPM": {
                "type": "number"
              },
              "avgXPM": {
                "type": "number"
              }
            }
          },
          "rolePerformance": {
            "type": "object",
            "properties": {
              "carry": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgKDA": {
                    "type": "number"
                  },
                  "avgGPM": {
                    "type": "number"
                  }
                }
              },
              "mid": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgKDA": {
                    "type": "number"
                  },
                  "avgGPM": {
                    "type": "number"
                  }
                }
              },
              "offlane": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgKDA": {
                    "type": "number"
                  },
                  "avgGPM": {
                    "type": "number"
                  }
                }
              },
              "support": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgKDA": {
                    "type": "number"
                  },
                  "avgGPM": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "gamePhaseStats": {
            "type": "object",
            "properties": {
              "earlyGame": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgDuration": {
                    "type": "string"
                  }
                }
              },
              "midGame": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgDuration": {
                    "type": "string"
                  }
                }
              },
              "lateGame": {
                "type": "object",
                "properties": {
                  "winRate": {
                    "type": "number"
                  },
                  "avgDuration": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "heroPool": {
            "type": "object",
            "properties": {
              "mostPicked": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hero": {
                      "type": "string"
                    },
                    "games": {
                      "type": "integer"
                    },
                    "winRate": {
                      "type": "number"
                    }
                  }
                }
              },
              "mostBanned": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hero": {
                      "type": "string"
                    },
                    "bans": {
                      "type": "integer"
                    },
                    "banRate": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/cache/invalidate": {
      "post": {
        "summary": "Invalidate cache entries by pattern or key",
        "description": "Invalidates cache entries either by pattern matching or by specific key. Supports both Redis and memory cache backends with automatic fallback.",
        "tags": [
          "Cache"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pattern": {
                    "type": "string",
                    "description": "Pattern to match cache keys (cannot be used with key)"
                  },
                  "key": {
                    "type": "string",
                    "description": "Specific cache key to invalidate (cannot be used with pattern)"
                  }
                },
                "example": {
                  "pattern": "opendota:*"
                }
              },
              "examples": {
                "pattern": {
                  "summary": "Invalidate by pattern",
                  "value": {
                    "pattern": "opendota:heroes:*"
                  }
                },
                "key": {
                  "summary": "Invalidate by key",
                  "value": {
                    "key": "opendota:heroes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cache invalidation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "invalidated": {
                          "type": "integer",
                          "description": "Number of cache entries invalidated"
                        },
                        "pattern": {
                          "type": "string",
                          "description": "Pattern used for invalidation (pattern-based only)"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "backend": {
                      "type": "string",
                      "enum": [
                        "redis",
                        "memory"
                      ]
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "invalidatedCount": {
                          "type": "integer"
                        },
                        "existed": {
                          "type": "boolean"
                        },
                        "invalidated": {
                          "type": "boolean"
                        },
                        "operation": {
                          "type": "string",
                          "enum": [
                            "pattern-invalidation",
                            "key-invalidation"
                          ]
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "invalidated": 15,
                    "pattern": "opendota:heroes:*"
                  },
                  "timestamp": "2024-01-01T00:00:00.000Z",
                  "backend": "redis",
                  "details": {
                    "pattern": "opendota:heroes:*",
                    "invalidatedCount": 15,
                    "operation": "pattern-invalidation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "missing_criteria": {
                    "summary": "Missing invalidation criteria",
                    "value": {
                      "error": "Missing invalidation criteria",
                      "status": 400,
                      "details": "Either pattern or key must be provided"
                    }
                  },
                  "invalid_criteria": {
                    "summary": "Invalid invalidation criteria",
                    "value": {
                      "error": "Invalid invalidation criteria",
                      "status": 400,
                      "details": "Cannot specify both pattern and key, choose one"
                    }
                  },
                  "invalid_body": {
                    "summary": "Invalid request body",
                    "value": {
                      "error": "Invalid request body",
                      "status": 400,
                      "details": "Request body must be valid JSON"
                    }
                  },
                  "invalid_pattern": {
                    "summary": "Invalid cache pattern",
                    "value": {
                      "error": "Invalid cache pattern",
                      "status": 400,
                      "details": "Cache pattern is invalid or malformed"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Permission denied",
                  "status": 403,
                  "details": "Insufficient permissions to invalidate cache"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to invalidate cache",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          },
          "503": {
            "description": "Cache backend unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Cache backend unavailable",
                  "status": 503,
                  "details": "Cache service is temporarily unavailable"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get cache invalidation status and statistics",
        "description": "Retrieves cache backend information, health status, statistics, and available invalidation endpoints. Useful for monitoring cache performance and understanding available operations.",
        "tags": [
          "Cache"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved cache status and statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "backend": {
                          "type": "string",
                          "enum": [
                            "redis",
                            "memory"
                          ],
                          "description": "Current cache backend in use"
                        },
                        "healthy": {
                          "type": "boolean",
                          "description": "Cache backend health status"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "hits": {
                              "type": "integer",
                              "description": "Number of cache hits"
                            },
                            "misses": {
                              "type": "integer",
                              "description": "Number of cache misses"
                            },
                            "keys": {
                              "type": "integer",
                              "description": "Total number of cached keys"
                            },
                            "hitRate": {
                              "type": "number",
                              "description": "Cache hit rate percentage"
                            }
                          }
                        },
                        "endpoints": {
                          "type": "object",
                          "properties": {
                            "invalidatePattern": {
                              "type": "object",
                              "properties": {
                                "method": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "example": {
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "invalidateKey": {
                              "type": "object",
                              "properties": {
                                "method": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "example": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "data": {
                    "backend": "redis",
                    "healthy": true,
                    "statistics": {
                      "hits": 1250,
                      "misses": 185,
                      "keys": 423,
                      "hitRate": 0.871
                    },
                    "endpoints": {
                      "invalidatePattern": {
                        "method": "POST",
                        "description": "Invalidate cache entries by pattern",
                        "example": {
                          "pattern": "opendota:*"
                        }
                      },
                      "invalidateKey": {
                        "method": "POST",
                        "description": "Invalidate single cache entry by key",
                        "example": {
                          "key": "opendota:heroes"
                        }
                      }
                    }
                  },
                  "timestamp": "2024-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to get cache status",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/heroes": {
      "get": {
        "summary": "Fetch and process Dota 2 heroes data",
        "description": "Retrieves all Dota 2 heroes with optional filtering by complexity, role, primary attribute, and tier. Supports caching and rate limiting.",
        "tags": [
          "Heroes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Force refresh of cached data"
          },
          {
            "in": "query",
            "name": "complexity",
            "schema": {
              "type": "string",
              "enum": [
                "beginner",
                "intermediate",
                "advanced"
              ]
            },
            "description": "Filter heroes by complexity level"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string"
            },
            "description": "Filter heroes by role (partial match)"
          },
          {
            "in": "query",
            "name": "primaryAttribute",
            "schema": {
              "type": "string",
              "enum": [
                "strength",
                "agility",
                "intelligence",
                "universal"
              ]
            },
            "description": "Filter heroes by primary attribute"
          },
          {
            "in": "query",
            "name": "tier",
            "schema": {
              "type": "string",
              "enum": [
                "S",
                "A",
                "B",
                "C",
                "D"
              ]
            },
            "description": "Filter heroes by tier ranking"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved heroes data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "localizedName": {
                            "type": "string"
                          },
                          "primaryAttribute": {
                            "type": "string"
                          },
                          "attackType": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "complexity": {
                            "type": "string"
                          },
                          "tier": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of heroes in filtered results"
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "Total number of heroes available"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "filters": {
                      "type": "object",
                      "properties": {
                        "complexity": {
                          "type": "string",
                          "nullable": true
                        },
                        "role": {
                          "type": "string",
                          "nullable": true
                        },
                        "primaryAttribute": {
                          "type": "string",
                          "nullable": true
                        },
                        "tier": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "npc_dota_hero_antimage",
                      "localizedName": "Anti-Mage",
                      "primaryAttribute": "agility",
                      "attackType": "Melee",
                      "roles": [
                        "Carry",
                        "Escape",
                        "Nuker"
                      ],
                      "complexity": "intermediate",
                      "tier": "A",
                      "image": "https://cdn.dota2.com/apps/dota2/images/heroes/antimage_full.png",
                      "icon": "https://cdn.dota2.com/apps/dota2/images/heroes/antimage_icon.png"
                    }
                  ],
                  "count": 1,
                  "totalCount": 123,
                  "timestamp": "2024-01-01T00:00:00.000Z",
                  "filters": {
                    "complexity": null,
                    "role": null,
                    "primaryAttribute": null,
                    "tier": null
                  }
                }
              }
            }
          },
          "404": {
            "description": "Heroes data not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Data Not Found",
                  "status": 404,
                  "details": "Heroes data could not be found or loaded."
                }
              }
            }
          },
          "429": {
            "description": "Rate limited by OpenDota API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Rate limited by OpenDota API",
                  "status": 429,
                  "details": "Too many requests to OpenDota API. Please try again later."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to process heroes",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/{id}": {
      "get": {
        "summary": "Fetch and process Dota 2 league data",
        "description": "Retrieves league information including tournament details, matches, and statistics from Dotabuff. Supports different view modes for optimized data delivery.",
        "tags": [
          "Leagues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "League ID (numeric string)"
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Force refresh of cached data"
          },
          {
            "in": "query",
            "name": "includeMatches",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include matches data in the response"
          },
          {
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "summary"
              ],
              "default": "full"
            },
            "description": "Data view mode (full=all data, summary=basic info)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved league data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "leagueId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tournamentUrl": {
                          "type": "string"
                        },
                        "matches": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchId": {
                                "type": "string"
                              },
                              "duration": {
                                "type": "integer"
                              },
                              "radiant_win": {
                                "type": "boolean"
                              },
                              "radiant_name": {
                                "type": "string"
                              },
                              "dire_name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalMatches": {
                              "type": "integer"
                            },
                            "averageDuration": {
                              "type": "number"
                            },
                            "radiantWins": {
                              "type": "integer"
                            },
                            "direWins": {
                              "type": "integer"
                            },
                            "uniqueTeams": {
                              "type": "integer"
                            }
                          }
                        },
                        "processed": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "view": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "includeMatches": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "leagueId": "16435",
                    "name": "The International 2024",
                    "description": "The International is the premier Dota 2 tournament",
                    "tournamentUrl": "https://www.dota2.com/esports/ti2024",
                    "matches": [
                      {
                        "matchId": "8054301932",
                        "duration": 2150,
                        "radiant_win": true,
                        "radiant_name": "Team Spirit",
                        "dire_name": "Team Secret"
                      }
                    ],
                    "statistics": {
                      "totalMatches": 156,
                      "averageDuration": 2247,
                      "radiantWins": 78,
                      "direWins": 78,
                      "uniqueTeams": 16
                    },
                    "processed": {
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "version": "1.0.0"
                    }
                  },
                  "timestamp": "2024-01-01T00:00:00.000Z",
                  "view": "full",
                  "options": {
                    "includeMatches": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid league ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid league ID",
                  "status": 400,
                  "details": "League ID must be a valid number"
                }
              }
            }
          },
          "404": {
            "description": "League not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Data Not Found",
                  "status": 404,
                  "details": "League with ID 16435 could not be found."
                }
              }
            }
          },
          "422": {
            "description": "Invalid league data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid league data",
                  "status": 422,
                  "details": "League data is invalid or corrupted."
                }
              }
            }
          },
          "429": {
            "description": "Rate limited by Dotabuff API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Rate limited by Dotabuff API",
                  "status": 429,
                  "details": "Too many requests to Dotabuff API. Please try again later."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to process league",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/matches/{id}/parse": {
      "post": {
        "summary": "Parse a Dota 2 match",
        "description": "Initiates match parsing through a background job queue. Returns immediately with job status and polls for completion within the timeout period. Supports both QStash and in-memory queue backends.",
        "tags": [
          "Matches"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Match ID (numeric string)"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "normal",
                "high"
              ],
              "default": "normal"
            },
            "description": "Job priority in the queue"
          },
          {
            "in": "query",
            "name": "timeout",
            "schema": {
              "type": "integer",
              "default": 60000
            },
            "description": "Maximum time to wait for parsing completion (in milliseconds)"
          }
        ],
        "responses": {
          "200": {
            "description": "Match parsing completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "Unique job identifier"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "completed",
                        "failed",
                        "timeout"
                      ],
                      "description": "Final job status"
                    },
                    "matchId": {
                      "type": "integer",
                      "description": "Match ID that was parsed"
                    },
                    "parsed": {
                      "type": "boolean",
                      "description": "Whether the match was successfully parsed"
                    },
                    "data": {
                      "type": "object",
                      "description": "Parsed match data (when status is completed)"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "processingTime": {
                      "type": "integer",
                      "description": "Time taken to complete parsing (in milliseconds)"
                    },
                    "backend": {
                      "type": "string",
                      "enum": [
                        "qstash",
                        "memory"
                      ],
                      "description": "Queue backend used for processing"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message (when status is failed or timeout)"
                    },
                    "mockMode": {
                      "type": "boolean",
                      "description": "Whether mock mode was used for processing"
                    }
                  }
                },
                "examples": {
                  "completed": {
                    "summary": "Successfully parsed match",
                    "value": {
                      "jobId": "match-parse-8054301932-1640995200000",
                      "status": "completed",
                      "matchId": 8054301932,
                      "parsed": true,
                      "data": {
                        "matchId": "8054301932",
                        "startTime": "2024-01-01T00:00:00.000Z",
                        "duration": 2150,
                        "radiantWin": true,
                        "gameMode": "All Pick",
                        "statistics": {
                          "totalKills": 45,
                          "radiantScore": 28,
                          "direScore": 17
                        }
                      },
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "processingTime": 5000,
                      "backend": "qstash"
                    }
                  },
                  "failed": {
                    "summary": "Failed to parse match",
                    "value": {
                      "jobId": "match-parse-8054301932-1640995200000",
                      "status": "failed",
                      "matchId": 8054301932,
                      "error": "Match parsing failed",
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "processingTime": 15000
                    }
                  },
                  "timeout": {
                    "summary": "Parsing timed out",
                    "value": {
                      "jobId": "match-parse-8054301932-1640995200000",
                      "status": "timeout",
                      "matchId": 8054301932,
                      "error": "Match parsing timed out",
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "processingTime": 60000
                    }
                  },
                  "mock": {
                    "summary": "Mock mode processing",
                    "value": {
                      "jobId": "match-parse-8054301932-1640995200000",
                      "status": "completed",
                      "matchId": 8054301932,
                      "parsed": true,
                      "mockMode": true,
                      "data": {
                        "matchId": "8054301932",
                        "startTime": "2024-01-01T00:00:00.000Z",
                        "duration": 2150
                      },
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "processingTime": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid match ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid match ID",
                  "status": 400,
                  "details": "Match ID must be a valid number"
                }
              }
            }
          },
          "404": {
            "description": "Match not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Data Not Found",
                  "status": 404,
                  "details": "Match with ID 8054301932 could not be found for parsing."
                }
              }
            }
          },
          "422": {
            "description": "Invalid match data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid match data",
                  "status": 422,
                  "details": "Match data is invalid and cannot be parsed."
                }
              }
            }
          },
          "429": {
            "description": "Rate limited by OpenDota API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Rate limited by OpenDota API",
                  "status": 429,
                  "details": "Too many requests to OpenDota API. Please try again later."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to parse match",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/matches/{id}": {
      "get": {
        "summary": "Fetch and process Dota 2 match data",
        "description": "Retrieves detailed match information including players, teams, statistics, and game events. Supports both parsed and unparsed match data with different view modes for optimized data delivery.",
        "tags": [
          "Matches"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Match ID (numeric string)"
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Force refresh of cached data"
          },
          {
            "in": "query",
            "name": "parsed",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Return parsed match data with detailed statistics"
          },
          {
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "summary",
                "players",
                "teams"
              ],
              "default": "full"
            },
            "description": "Data view mode (full=all data, summary=basic info, players=player focus, teams=team focus)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved match data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "matchId": {
                          "type": "string"
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "duration": {
                          "type": "integer"
                        },
                        "radiantWin": {
                          "type": "boolean"
                        },
                        "gameMode": {
                          "type": "string"
                        },
                        "lobbyType": {
                          "type": "string"
                        },
                        "averageRank": {
                          "type": "integer"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalKills": {
                              "type": "integer"
                            },
                            "radiantScore": {
                              "type": "integer"
                            },
                            "direScore": {
                              "type": "integer"
                            },
                            "firstBlood": {
                              "type": "integer"
                            },
                            "avgGPM": {
                              "type": "number"
                            },
                            "avgXPM": {
                              "type": "number"
                            }
                          }
                        },
                        "teams": {
                          "type": "object",
                          "properties": {
                            "radiant": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "type": "string"
                                  },
                                  "heroId": {
                                    "type": "integer"
                                  },
                                  "kills": {
                                    "type": "integer"
                                  },
                                  "deaths": {
                                    "type": "integer"
                                  },
                                  "assists": {
                                    "type": "integer"
                                  },
                                  "lastHits": {
                                    "type": "integer"
                                  },
                                  "denies": {
                                    "type": "integer"
                                  },
                                  "gpm": {
                                    "type": "number"
                                  },
                                  "xpm": {
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "dire": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "type": "string"
                                  },
                                  "heroId": {
                                    "type": "integer"
                                  },
                                  "kills": {
                                    "type": "integer"
                                  },
                                  "deaths": {
                                    "type": "integer"
                                  },
                                  "assists": {
                                    "type": "integer"
                                  },
                                  "lastHits": {
                                    "type": "integer"
                                  },
                                  "denies": {
                                    "type": "integer"
                                  },
                                  "gpm": {
                                    "type": "number"
                                  },
                                  "xpm": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "processed": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string"
                            },
                            "dataQuality": {
                              "type": "string"
                            },
                            "completeness": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "view": {
                      "type": "string"
                    },
                    "parsed": {
                      "type": "boolean"
                    },
                    "cached": {
                      "type": "boolean"
                    }
                  }
                },
                "example": {
                  "data": {
                    "matchId": "8054301932",
                    "startTime": "2024-01-01T00:00:00.000Z",
                    "duration": 2150,
                    "radiantWin": true,
                    "gameMode": "All Pick",
                    "lobbyType": "Ranked",
                    "averageRank": 75,
                    "statistics": {
                      "totalKills": 45,
                      "radiantScore": 28,
                      "direScore": 17,
                      "firstBlood": 120,
                      "avgGPM": 520,
                      "avgXPM": 580
                    },
                    "teams": {
                      "radiant": [
                        {
                          "accountId": "123456789",
                          "heroId": 1,
                          "kills": 8,
                          "deaths": 2,
                          "assists": 12,
                          "lastHits": 185,
                          "denies": 15,
                          "gpm": 650,
                          "xpm": 720
                        }
                      ],
                      "dire": [
                        {
                          "accountId": "987654321",
                          "heroId": 2,
                          "kills": 3,
                          "deaths": 6,
                          "assists": 8,
                          "lastHits": 125,
                          "denies": 8,
                          "gpm": 420,
                          "xpm": 480
                        }
                      ]
                    },
                    "processed": {
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "dataQuality": "high",
                      "completeness": 0.95
                    }
                  },
                  "timestamp": "2024-01-01T00:00:00.000Z",
                  "view": "full",
                  "parsed": false,
                  "cached": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid match ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid match ID",
                  "status": 400,
                  "details": "Match ID must be a valid number"
                }
              }
            }
          },
          "404": {
            "description": "Match not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Data Not Found",
                  "status": 404,
                  "details": "Match with ID 8054301932 could not be found."
                }
              }
            }
          },
          "422": {
            "description": "Invalid match data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid match data",
                  "status": 422,
                  "details": "Match data is invalid or corrupted."
                }
              }
            }
          },
          "429": {
            "description": "Rate limited by OpenDota API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Rate limited by OpenDota API",
                  "status": 429,
                  "details": "Too many requests to OpenDota API. Please try again later."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to process match",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/players/{id}": {
      "get": {
        "summary": "Fetch and process Dota 2 player data",
        "description": "Retrieves comprehensive player data including profile, statistics, performance metrics, and recent activity. Supports different view modes for optimized data delivery.",
        "tags": [
          "Players"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Player account ID (numeric string)"
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Force refresh of cached data"
          },
          {
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "profile",
                "stats",
                "recent"
              ],
              "default": "full"
            },
            "description": "Data view mode (full=all data, profile=basic info, stats=statistics, recent=recent activity)"
          },
          {
            "in": "query",
            "name": "includeMatches",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include recent matches data"
          },
          {
            "in": "query",
            "name": "includeHeroes",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include hero performance data"
          },
          {
            "in": "query",
            "name": "includeRecent",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include recent activity data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved player data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string"
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "type": "string"
                            },
                            "personaName": {
                              "type": "string"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "rankTier": {
                              "type": "integer"
                            },
                            "leaderboardRank": {
                              "type": "integer"
                            },
                            "mmrEstimate": {
                              "type": "object"
                            },
                            "plus": {
                              "type": "boolean"
                            }
                          }
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "winRate": {
                              "type": "number"
                            },
                            "totalMatches": {
                              "type": "integer"
                            },
                            "totalWins": {
                              "type": "integer"
                            },
                            "totalLosses": {
                              "type": "integer"
                            },
                            "avgKDA": {
                              "type": "number"
                            },
                            "avgLastHits": {
                              "type": "number"
                            },
                            "avgDenies": {
                              "type": "number"
                            },
                            "avgGPM": {
                              "type": "number"
                            },
                            "avgXPM": {
                              "type": "number"
                            }
                          }
                        },
                        "performance": {
                          "type": "object",
                          "properties": {
                            "recentPerformance": {
                              "type": "string"
                            },
                            "skillLevel": {
                              "type": "string"
                            },
                            "consistency": {
                              "type": "string"
                            },
                            "impact": {
                              "type": "string"
                            }
                          }
                        },
                        "processed": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string"
                            },
                            "dataQuality": {
                              "type": "string"
                            },
                            "completeness": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "view": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "includeMatches": {
                          "type": "boolean"
                        },
                        "includeHeroes": {
                          "type": "boolean"
                        },
                        "includeRecent": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "accountId": "12345678",
                    "profile": {
                      "accountId": "12345678",
                      "personaName": "Example Player",
                      "avatar": "https://avatars.cloudflare.steamstatic.com/abc123.jpg",
                      "rankTier": 75,
                      "leaderboardRank": 1500,
                      "mmrEstimate": {
                        "estimate": 5500
                      },
                      "plus": true
                    },
                    "statistics": {
                      "winRate": 0.62,
                      "totalMatches": 1250,
                      "totalWins": 775,
                      "totalLosses": 475,
                      "avgKDA": 2.8,
                      "avgLastHits": 185,
                      "avgDenies": 12,
                      "avgGPM": 520,
                      "avgXPM": 580
                    },
                    "performance": {
                      "recentPerformance": "improving",
                      "skillLevel": "high",
                      "consistency": "stable",
                      "impact": "high"
                    },
                    "processed": {
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "dataQuality": "high",
                      "completeness": 0.95
                    }
                  },
                  "timestamp": "2024-01-01T00:00:00.000Z",
                  "view": "full",
                  "options": {
                    "includeMatches": false,
                    "includeHeroes": false,
                    "includeRecent": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid player ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid player ID",
                  "status": 400,
                  "details": "Player ID must be a valid number"
                }
              }
            }
          },
          "403": {
            "description": "Private profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Private profile",
                  "status": 403,
                  "details": "Player profile is private and cannot be accessed."
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Data Not Found",
                  "status": 404,
                  "details": "Player with ID 12345678 could not be found."
                }
              }
            }
          },
          "422": {
            "description": "Invalid player data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid player data",
                  "status": 422,
                  "details": "Player data is invalid or corrupted."
                }
              }
            }
          },
          "429": {
            "description": "Rate limited by OpenDota API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Rate limited by OpenDota API",
                  "status": 429,
                  "details": "Too many requests to OpenDota API. Please try again later."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to process player",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}": {
      "get": {
        "summary": "Fetch and process Dota 2 team data",
        "description": "Retrieves comprehensive team data including statistics, performance metrics, and roster information from Dotabuff. Supports different view modes for optimized data delivery.",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Team ID (numeric string)"
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Force refresh of cached data"
          },
          {
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "summary"
              ],
              "default": "full"
            },
            "description": "Data view mode (full=all data, summary=basic statistics)"
          },
          {
            "in": "query",
            "name": "includeMatches",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include recent matches data"
          },
          {
            "in": "query",
            "name": "includeRoster",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include team roster information"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved team data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "teamId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "performance": {
                          "type": "object",
                          "properties": {
                            "recentForm": {
                              "type": "string"
                            },
                            "strength": {
                              "type": "string"
                            },
                            "consistency": {
                              "type": "string"
                            }
                          }
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalMatches": {
                              "type": "integer"
                            },
                            "wins": {
                              "type": "integer"
                            },
                            "losses": {
                              "type": "integer"
                            },
                            "winRate": {
                              "type": "number"
                            },
                            "rating": {
                              "type": "number"
                            },
                            "lastMatchTime": {
                              "type": "string"
                            },
                            "averageMatchDuration": {
                              "type": "number"
                            }
                          }
                        },
                        "processed": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string"
                            },
                            "dataQuality": {
                              "type": "string"
                            },
                            "completeness": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "view": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "includeMatches": {
                          "type": "boolean"
                        },
                        "includeRoster": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "teamId": "9517508",
                    "name": "Team Spirit",
                    "tag": "TS",
                    "performance": {
                      "recentForm": "strong",
                      "strength": "high",
                      "consistency": "stable"
                    },
                    "statistics": {
                      "totalMatches": 150,
                      "wins": 95,
                      "losses": 55,
                      "winRate": 0.633,
                      "rating": 1850,
                      "lastMatchTime": "2024-01-01T00:00:00.000Z",
                      "averageMatchDuration": 2400
                    },
                    "processed": {
                      "timestamp": "2024-01-01T00:00:00.000Z",
                      "dataQuality": "high",
                      "completeness": 0.9
                    }
                  },
                  "timestamp": "2024-01-01T00:00:00.000Z",
                  "view": "full",
                  "options": {
                    "includeMatches": false,
                    "includeRoster": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid team ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid team ID",
                  "status": 400,
                  "details": "Team ID must be a valid number"
                }
              }
            }
          },
          "404": {
            "description": "Team not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Data Not Found",
                  "status": 404,
                  "details": "Team with ID 9517508 could not be found."
                }
              }
            }
          },
          "422": {
            "description": "Invalid team data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid team data",
                  "status": 422,
                  "details": "Team data is invalid or corrupted."
                }
              }
            }
          },
          "429": {
            "description": "Rate limited by Dotabuff API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Rate limited by Dotabuff API",
                  "status": 429,
                  "details": "Too many requests to Dotabuff API. Please try again later."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to process team",
                  "status": 500,
                  "details": "Unknown error occurred"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}